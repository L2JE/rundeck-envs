# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # $ vagrant plugin install winrm
  # $ vagrant plugin install winrm-fs
  
  required_plugins = %w(winrm winrm-fs winrm-elevated)

  plugins_to_install = required_plugins.select { |plugin| not Vagrant.has_plugin? plugin }
  
  if not plugins_to_install.empty?
    puts "Installing plugins: #{plugins_to_install.join(' ')}"
    if system "vagrant plugin install #{plugins_to_install.join(' ')}"
      exec "vagrant #{ARGV.join(' ')}"
    else
      abort "Installation of one or more plugins has failed. Aborting."
    end
  end  
  
  config.vm.box = "gusztavvargadr/windows-server" # From https://app.vagrantup.com/gusztavvargadr
  config.vm.box_version = "1809.0.2112" # Windows Server 2019 Standard Desktop

  config.vm.network "forwarded_port", guest: 5550, host: 4440

  config.vm.provision "shell", privileged: "true", powershell_elevated_interactive: "true", inline: <<-SHELL
    $rdeckPkg="rundeckpro-enterprise-4.0.0-20220322.war"    
    $RDECK_BASE="C:\\rundeck"
    $ruleName = "ALLOW TCP PORT 4440"
    New-NetFirewallRule -DisplayName "$ruleName" -Direction inbound -Profile Any -Action Allow -LocalPort 4440 -Protocol TCP
    Get-NetFirewallRule -DisplayName $ruleName

    Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    choco install openjdk8 -y
    $env:Path += "C:\\Program Files\\OpenJDK\\openjdk-8u322-b06\\bin;"

    New-Item -ItemType "directory" -Path "C:\\" -Name "rundeck"
    Invoke-WebRequest -Uri https://packagecloud.io/pagerduty/rundeckpro/packages/java/com.rundeck.enterprise/$rdeckPkg/artifacts/$rdeckPkg/download -OutFile $RDECK_BASE\\$rdeckPkg

    # then run rundeck using 'java -jar rundeck.jar'
  SHELL
end
