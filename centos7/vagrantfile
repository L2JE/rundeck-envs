Vagrant.configure("2") do |config|
  ######################################
  #### BASIC SERVER SETUP
  ######################################    
  RUNDECK_PKG="rundeckpro-enterprise-4.3.1.20220615-1"
  INSTANCE_IP="192.168.56.21"
  INSTANCE_PORT="4440"
  DB_URL_STRING="" #If not empty, must set all DB_* variables
  DB_DRIVER="org.h2.Driver"
  DB_DRIVER_URL=""
  DB_USER="sa"
  DB_PASS=""

  ######################################
  #### VM SETUP
  ######################################
  config.vm.box = "generic/centos7"
  
  config.vm.network "private_network", ip: INSTANCE_IP

  ######################################
  #### CUSTOM SERVER PROPERTIES SETUP
  ######################################
  CUSTOM_PROPS_FILE = "rundeck-config.properties" #Will merge with instance's rundeck-config.properties
  propKeys = Array.new
  propValues = Array.new
  if File.file?(CUSTOM_PROPS_FILE)
      file = File.open(CUSTOM_PROPS_FILE)
      props = file.read.gsub(/(^#.+)/, '').each_line.filter_map { |line| line.split('=',2) if !line.match /^$/ }

      propKeys = Array.new
      propValues = Array.new
      props.each { |prop| 
          propKeys.push(prop[0].chomp)
          propValues.push(prop[1].chomp)
      }
  end

  config.vm.provision "shell", inline: <<-SHELL
      overrideProps () {
            if [ ! -z "$1" ] && [ ! -z "$2" ] && [ ! -z "$3" ]; then
                  local props=($1)
                  set -o noglob
                  local values=($2)
                  set +o noglob
                  local target="$3"
                  echo "OVERRIDING PROPERTIES FILE: $target"

                  i=0
                  len=${#props[@]}
                  while [ $i -lt $len ]; do


                      local var=$(sed -i "/^${props[$i]}.*=/s/=.*$/=$(sed 's/\\//\\\\\\//g' <<< "${values[$i]}" | sed 's/&/\\\\&/g' )/w /dev/stdout" "$target") 

                      if [ -z "$var" ]; then
                          echo "  ADDING NOT EXISTING PROPERTY: ${props[$i]}"
                          echo "${props[$i]}=${values[$i]}" >> "$target"
                      fi
                      let i++
                  done
            fi
      }

      setServerIp () {
            local instanceIp="$1"
            local instancePort="$2"
            sed -i "/^grails.serverURL.*=/s/=.*$/=http:\\/\\/${instanceIp}:${instancePort}/" /etc/rundeck/rundeck-config.properties
            sed -i "/^framework.server.name.*=/s/=.*$/= ${instanceIp}/" /etc/rundeck/framework.properties
            sed -i "/^framework.server.hostname.*=/s/=.*$/= ${instanceIp}/" /etc/rundeck/framework.properties
            sed -i "/^framework.server.url.*=/s/=.*$/= http:\\/\\/${instanceIp}:${instancePort}/" /etc/rundeck/framework.properties
      }

      setDatabase () {
            local driver="$1"
            local driverUrl="$2"
            #One \ to skip ruby interpretation, Other \ to skip sed command's
            #dbUrl=http:\/\/example.com/val1\&val2 for next sed command
            local dbUrl=$(sed 's/\\\//\\\\\\//g' <<< "$3" | sed 's/&/\\\\&/g') #$(sed 's/\//\\\//g' <<< "$3" | sed 's/&/\\&/g')
            local user="$4"
            local pass="$5"

            if [ ! -z "$driver" ] && [ ! -z "$driverUrl" ] && [ ! -z "$dbUrl" ] && [ ! -z "$user" ] && [ ! -z "$pass" ]; then
                  echo "SETTING CUSTOM DB..."
                  mkdir /var/lib/rundeck/lib
                  
                  curl -L "$driverUrl" -o "/var/lib/rundeck/lib/$(tr '.' '-' <<< $driver).jar"

                  sed -i "/^dataSource.url.*=/s/=.*$/= ${dbUrl}/" /etc/rundeck/rundeck-config.properties
                  echo "dataSource.driverClassName=${driver}" >> /etc/rundeck/rundeck-config.properties
                  echo "dataSource.username=${user}" >> /etc/rundeck/rundeck-config.properties
                  echo "dataSource.password=${pass}" >> /etc/rundeck/rundeck-config.properties

                  rm -f /etc/rundeck/bootstrap.yml
            fi

            echo "DB SETUP FINISHED"
      }
      
      instanceIp="#{INSTANCE_IP}"
      instancePort="#{INSTANCE_PORT}"
      rundeckPkg="#{RUNDECK_PKG}"
      dbUrlString="#{DB_URL_STRING}"
      dbDriver="#{DB_DRIVER}"
      dbDriverUrl="#{DB_DRIVER_URL}"
      dbUser="#{DB_USER}"
      dbPass="#{DB_PASS}"
      bashKeysStr="#{propKeys.join("\n")}"
      bashValuesStr="#{propValues.join("\n")}"

repoData='[rundeckpro]
name=rundeckpro
baseurl=https://packages.rundeck.com/pagerduty/rundeckpro/rpm_any/rpm_any/$basearch
repo_gpgcheck=1
gpgcheck=0
enabled=1
gpgkey=https://packages.rundeck.com/pagerduty/rundeckpro/gpgkey
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
metadata_expire=300' 
      
      echo "$repoData" > /etc/yum.repos.d/rundeck.repo

      service firewalld stop
      yum update
      yum install java ${rundeckPkg} -y
      
      echo "Rundeck first start..."
      service rundeckd start

      while [[ $(tail -n 1 /var/log/rundeck/service.log) != *"Grails application running at http://"* ]]; do sleep 10; done
      service rundeckd stop
      echo "Setting host configuration..."
      
      setServerIp "$instanceIp" "$instancePort"
      setDatabase "$dbDriver" "$dbDriverUrl" "$dbUrlString" "$dbUser" "$dbPass"
      overrideProps "$bashKeysStr" "$bashValuesStr" "/etc/rundeck/rundeck-config.properties"

      echo "Rundeck Server Configuration set."
      service rundeckd start

      echo "PACKAGE: ${rundeckPkg}"
      echo "SERVER URL: http://${instanceIp}:${instancePort}"
   SHELL
end
